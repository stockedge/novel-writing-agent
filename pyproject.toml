[project]
name = "novel-writing-agents"
version = "6.0.0"
description = "計算論的物語論統合型ハイファンタジー小説執筆システム v6.0 - Computational Narratology Integrated High Fantasy Novel Writing System"
readme = "README.md"
authors = [
    { name = "Issei Mori", email = "isseimori127@example.com" }
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "nltk>=3.7",
    "textblob>=0.17.1",
    "dataclasses-json>=0.5.7",
    "typing-extensions>=4.0.0",
    "pathlib2>=2.3.6",
    "python-dateutil>=2.8.2",
    "loguru>=0.6.0",
    "pydantic>=2.0.0",
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langchain-google-genai>=1.0.0",
    "langchain-groq>=0.1.6",
    "langgraph>=0.1.0",
]

[project.scripts]
novel-writing-agents = "src.engines.computational_fantasy_engine:main"

[project.urls]
Repository = "https://github.com/issei-mori/novel-writing-agents"
Documentation = "https://github.com/issei-mori/novel-writing-agents#readme"

[project.optional-dependencies]
ai = [
    "langchain>=0.0.200",
    "transformers>=4.20.0",
    "torch>=1.12.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.11.12",
    "mypy>=1.0.0",
]

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pycache__",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--color=yes",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"
